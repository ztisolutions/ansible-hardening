---

  - name: 6.2.1 Ensure password fields are not empty (Scored)
    command: awk -F':' '($2 == "" ) { print $1 }' /etc/shadow
    register: awk_empty_shadow
    changed_when: False
    check_mode: no
    failed_when: awk_empty_shadow.stdout != '' and lock_shadow_accounts == False
    tags:
      - section6
      - section6.2
      - section6.2.1
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - name: 6.2.2 Ensure no legacy "+" entries exist in /etc/passwd (Scored)
    command: grep '^+:' /etc/passwd
    register: plus_pass
    failed_when: plus_pass.rc == 0
    changed_when: plus_pass.rc == 0
    tags:
      - section6
      - section6.2
      - section6.2.2
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - name: 6.2.3 Ensure no legacy "+" entries exist in /etc/shadow (Scored)
    command: grep '^+:' /etc/shadow
    register: plus_shadow
    failed_when: plus_shadow.rc == 0
    changed_when: plus_shadow.rc == 0
    tags:
      - section6
      - section6.2
      - section6.2.3
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - name: 6.2.4 Ensure no legacy "+" entries exist in /etc/group (Scored)
    command: grep '^+:' /etc/group
    register: plus_group
    failed_when: plus_group.rc == 0
    changed_when: plus_group.rc == 0
    tags:
      - section6
      - section6.2
      - section6.2.4
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - name: 6.2.5 Ensure root is the only UID 0 account (Scored)
    command: awk -F':' '($3 == 0) { print $1 }' /etc/passwd
    register: uid_zero_root
    changed_when: False
    failed_when: uid_zero_root.stdout != 'root'
    tags:
      - section6
      - section6.2
      - section6.2.5
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
      
  - name: 6.2.6 Ensure root PATH Integrity (Scored)
    script: scripts/6.2.6.sh
    register: root_path_integrity
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.6
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=root_path_integrity.stdout_lines
    tags: safe

      
  - name: 6.2.7 Ensure all users' home directories exist (Scored)
    script: scripts/6.2.7.sh
    register: home_directories_exist
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.7
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=home_directories_exist.stdout_lines
    tags: safe

  - name: 6.2.8 Ensure users' home directories permissions are 750 or more restrictive (Scored)
    script: scripts/6.2.8.sh
    register: home_directories_permissions
    when: modify_user_homes == True
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.8
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=home_directories_permissions.stdout_lines
    tags: safe
      
  - name: 6.2.9 Ensure users own their home directories (Scored)
    script: scripts/6.2.9.sh
    register: home_directories_own
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.9
      - lvl.1.server
      - lvl.1.workstation
      
  - debug: var=home_directories_own.stdout_lines
    tags: safe
  
  - name: 6.2.10 Ensure users' dot files are not group or world writable (Scored)
    script: scripts/6.2.10.sh
    register: user_dot_files
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.10
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=user_dot_files.stdout_lines
    tags: safe
      
  - name: 6.2.11 Ensure no users have .forward files (Scored)
    script: scripts/6.2.11.sh
    register: user_forward_files
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.11
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=user_forward_files.stdout_lines
    tags: safe

      
  - name: 6.2.12 Ensure no users have .netrc files (Scored)
    script: scripts/6.2.12.sh
    register: user_netrc_files
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.12
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=user_netrc_files.stdout_lines
    tags: safe
     
  - name: 6.2.13 Ensure users' .netrc Files are not group or world accessible (Scored)
    script: scripts/6.2.13.sh
    register: user_netrc_files_permissions
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.13
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=user_netrc_files_permissions.stdout_lines
    tags: safe
      
  - name: 6.2.14 Ensure no users have .rhosts files (Scored)
    script: scripts/6.2.14.sh
    register: user_rhosts_files
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.14
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=user_rhosts_files.stdout_lines
    tags: safe
      
  - name: 6.2.15 Ensure all groups in /etc/passwd exist in /etc/group (Scored)
    script: scripts/6.2.15.sh
    register: check_groups_in_passwd
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.15
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=check_groups_in_passwd.stdout_lines
    tags: safe
      
  - name: 6.2.16 Ensure no duplicate UIDs exist (Scored)
    script: scripts/6.2.16.sh
    register: duplicate_uids
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.16
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=duplicate_uids.stdout_lines
    tags: safe

  - name: 6.2.17 Ensure no duplicate GIDs exist (Scored)
    script: scripts/6.2.17.sh
    register: duplicate_gids
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.17
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=duplicate_gids.stdout_lines
    tags: safe
      
  - name: 6.2.18 Ensure no duplicate user names exist (Scored)
    script: scripts/6.2.18.sh
    register: duplicate_users
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.18
      - lvl.1.server
      - lvl.1.workstation
      - safe
      
  - debug: var=duplicate_users.stdout_lines
    tags: safe
      
  - name: 6.2.19 Ensure no duplicate group names exist (Scored)
    script: scripts/6.2.19.sh
    register: duplicate_groups
    changed_when: false
    tags:
      - section6
      - section6.2
      - section6.2.19
      - lvl.1.server
      - lvl.1.workstation
      - safe

  - debug: var=duplicate_groups.stdout_lines
    tags: safe
      
  - name: 6.2.20 Ensure shadow group is empty (Scored)
    shell: grep '^shadow' /etc/group | cut -f4 -d':'
    changed_when: false
    register: shadow_group_empty
    failed_when: shadow_group_empty.stdout != ''
    tags:
      - section6
      - section6.2
      - section6.2.20
      - lvl.1.server
      - lvl.1.workstation
      - safe
      